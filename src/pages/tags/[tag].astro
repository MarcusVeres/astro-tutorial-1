---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../layouts/BlogPost.astro';

export async function getStaticPaths() {

    // This come MUST be in the scope of getStaticPaths()
    const allPosts = Object.values(import.meta.glob('../posts/*.md', { eager: true }));

    // Method 1
    /*
    return [
        { params: { tag: "astro" } , props: { posts: allPosts } },
        { params: { tag: "successes" } , props: { posts: allPosts } },
        { params: { tag: "community" } , props: { posts: allPosts } },
        { params: { tag: "blogging" } , props: { posts: allPosts } },
        { params: { tag: "setbacks" } , props: { posts: allPosts } },
        { params: { tag: "learning in public" } , props: { posts: allPosts } },
    ];
    */
      
    // Get a list of all unique tags that exist
    const uniqueTags = [...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat())];

    // Method 2
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post: any) => post.frontmatter.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// Method 1 
// Only display posts that include the current tag
// Used by the filteredPosts methods 
// const filteredPosts = posts.filter((post: any) => post.frontmatter.tags?.includes(tag));
---
<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    <ul>
        <!-- Method 1 -->
        <!--{filteredPosts.map((post: any) => <li><a href={post.url}>{post.frontmatter.title}</a></li>)}-->
        <!--{filteredPosts.map((post: any) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}-->

        <!-- Method 2 -->
        {posts.map((post: any) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
    </ul>
</BaseLayout>
